name: Code Coverage


on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Docker
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      # Step 3: Run Tests with Code Coverage in Docker
      - name: Run tests with Docker
        run: |
          docker run --rm -v "${{ github.workspace }}:/app" -w /app mcr.microsoft.com/dotnet/sdk:8.0 dotnet test tests/PioConnection.Api.Tests.Intergration/PioConnection.Api.Tests.Intergration.csproj --collect:"XPlat Code Coverage" --results-directory ./testresults/integration && \
          docker run --rm -v "${{ github.workspace }}:/app" -w /app mcr.microsoft.com/dotnet/sdk:8.0 dotnet test tests/PioConnection.Dtos.Tests.Unit/PioConnection.Dtos.Tests.Unit.csproj --collect:"XPlat Code Coverage" --results-directory ./testresults/dtos && \
          docker run --rm -v "${{ github.workspace }}:/app" -w /app mcr.microsoft.com/dotnet/sdk:8.0 dotnet test tests/PioConnection.Commands.Tests.Unit/PioConnection.Commands.Tests.Unit.csproj --collect:"XPlat Code Coverage" --results-directory ./testresults/dtos && \
          docker run --rm -v "${{ github.workspace }}:/app" -w /app mcr.microsoft.com/dotnet/sdk:8.0 dotnet test tests/PioConnection.Api.Tests.Unit/PioConnection.Api.Tests.Unit.csproj --collect:"XPlat Code Coverage" --results-directory ./testresults/dtos

      # Step 4: Upload coverage results to Codecov
      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/Cobertura.xml
          fail_ci_if_error: true
      #Step 5: Upload test results to CodeCov
      - name: Upload test results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@v1
        with:
         token: ${{ secrets.CODECOV_TOKEN }}

      # Step 6: Update the README with coverage badge
      - name: Update README with Coverage Badge
        run: |
          # Ensure coverage/ directory is ignored
          echo "coverage/" >> .gitignore
          git add .gitignore
          # Update README with Codecov badge
          sed -i 's|!\[Coverage\](.*)|![Coverage](https://codecov.io/gh/317jamtay317/PioSolverConnection/branch/master/graph/badge.svg)|g' README.md
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add README.md
          git commit -m "Update coverage badge"
          git push
